{"name":"Repack Lambda","tagline":"AWS Lambda Microservice Architecture for Node.js","body":"# Repack Lambda\r\n[![Build Status](https://travis-ci.org/dbuarque/repack-lambda.svg?branch=master)](https://travis-ci.org/dbuarque/repack-lambda)\r\n\r\nAWS Lambda Microservices Architecture Template\r\n\r\nObs. This template is designed to be used with Node.js projects, but it can be changed to any language.\r\n\r\n![Sample Architecture](http://i.imgur.com/SMjfQjC.png)\r\n\r\n### Features:\r\n\r\n* Develop multiple lambda functions over the same code base using shared libraries\r\n* Scaffold new lambda functions (configs, handlers & tests)\r\n* One command deploy (build, lint, test & deploy)\r\n* Webpack build system for production\r\n* Use ES2015 & Babel\r\n* Use Mocha for tests\r\n* Travis for CI \r\n* Use ESLint\r\n* Easy versioning & release\r\n* Focus on modularity\r\n\r\n### Install\r\n\r\n**PROTIP** Be sure to use node 4+ \r\n\r\n```bash\r\n$ npm install\r\n```\r\n\r\n\r\n### Project Structure\r\n\r\nAll commands are defined as scripts in packages.json\r\n\r\n```bash\r\n.\r\n├── LICENSE\r\n├── README.md\r\n├── bin\r\n│   ├── build.sh\r\n│   ├── create.sh\r\n│   └── deploy.sh\r\n├── config\r\n│   └── templates\r\n│       ├── lambda-spec.tpl.js - Spec test template\r\n│       ├── lambda.config.tpl.js - Lambda config template\r\n│       └── lambda.tpl.js - Lambda handler template\r\n├── gulpfile.js\r\n├── package.json\r\n├── src\r\n│   └── lambdas\r\n├── tests\r\n│   └── index-spec.js\r\n└── webpack.config.js\r\n```\r\n\r\n### Quick Start\r\n\r\n```bash\r\n$ APP=myLambda npm run create\r\n```\r\nThis command will create 3 files:\r\n\r\n1. `./src/lambdas/myLambda.js` - Lambda handler function\r\n2. `./tests/myLambda-spec.js` - Function test file with Mocha\r\n3. `./config/myLambda.config.js` - Lambda config file\r\n\r\n### Tests\r\n```bash\r\n$ npm test\r\n```\r\n\r\nThis will run all tests for all lambda functions or you can run without npm with:\r\n \r\n```bash\r\n$ mocha ./tests/myLambda-spec.js --compilers js:babel-register\r\n```\r\n\r\n**PROTIP** If do you choose run it without npm please install mocha as global before \r\n```\r\n$ npm install mocha -g\r\n``` \r\n\r\n### Deploy\r\nBefore Deploy you have to get the [AWS Lambda Role Arn](http://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html)\r\n```bash\r\n$ ROLE_ARN=xxxx APP=myLambda npm run deploy\r\n```\r\n\r\n## Road Map\r\n\r\n* Move all shell commands to gulp\r\n* Add command to list all lambdas\r\n* Add command to remove a lambda function locally\r\n* Create a Web UI with Reactjs & Redux\r\n* Give Support to other platforms\r\n* Improve AWS integration with new commands\r\n\r\n## Contribute\r\nYou can contribute just opening new [issues here](https://github.com/dbuarque/repack-lambda/issues) or sending a pull request with tests\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}